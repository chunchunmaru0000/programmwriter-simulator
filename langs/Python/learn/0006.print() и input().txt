[b]Вывод на консоль[/b]
Для вывода информации на консоль предназначена встроенная функция print(). При вызове этой функции ей в скобках передается выводимое значение:
<code///>
print("Hello Владимир Владимирович")
<code///>
Данный код выведет нам на консоль строку "Hello Владимир Владимирович".
Отличительной особенностью этой функции является то, что по умолчанию она выводит значение на отдельной строке. Например:
<code///>
print("Hello World")
print("Hello Владимир Владимирович")
print("Hello Python")
<code///>
Здесь три вызова функции print() выводят некоторое сообщение. Причем при выводе на консоль каждое сообщение будет размещаться на отдельной строке:

Hello World
Hello Владимир Владимирович
Hello Python

Такое поведение не всегда удобно. Например, мы хотим, чтобы все значения выводились на одной строке. Для этого нам надо настроить поведение функции с помощью параметра end. Этот параметр задает символы, которые добавляются в конце к выводимой строке и . При применении параметра end вызов функции print() выглядит следующим образом:
<code///>
print(значение, end = конечные_символы)
<code///>
По умолчанию end равен символу "\n", который задает перевод на следующую строку. Собственно поэтому функция print по умолчанию выводит передаваемое ей значение на отдельной строке.
Теперь определим, чтобы функция не делала перевод на следующую строку, а выводила значение на той же строке:
<code///>
print("Hello World", end=" ")
print("Hello Владимир Владимирович", end=" ")
print("Hello Python")
<code///>
То есть теперь выводимые значения будут разделяться пробелом:

Hello World Hello Владимир Владимирович Hello Python

Причем это может быть не один символ, а набор символов:
<code///>
print("Hello World", end=" and ")
print("Hello Владимир Владимирович", end=" and ")
print("Hello Python")
<code///>
В данном случае выводимые сообщения будут отделяться символами " and ":

Hello World and Hello Владимир Владимирович and Hello Python

[b]Консольный ввод[/b]

Наряду с выводом на консоль мы можем получать ввод пользователя с консоли, получать вводимые данные. Для этого в Python определена функция input(). В эту функцию передается приглашение к вводу. А результат ввода мы можем сохранить в переменную. Например, определим код для ввода пользователем имени:
<code///>
name = input("Введите свое имя: ")
print(f"Ваше имя: {name}")
<code///>
В данном случае в функцию input() передается приглашение к вводу в виде строки "Введите свое имя: ". Результат функции - результат ввода пользователя передается в переменную name. Затем мы можем вывести значение этой переменной на консоль с помощью функции print(). Пример работы кода:

Введите свое имя: Eugene
Ваше имя: Eugene

Еще пример с вводом нескольких значений:
<code///>
name = input("Your name: ")
age = input("Your age: ")
print(f"Name: {name}  Age: {age}")
<code///>
Пример работы программы:

Your name: Tom
Your age: 37
Name: Tom  Age: 37

Стоит учитывать, что все введенные значения рассматриваются как значения типа str, то есть строки. И даже если мы вводим число, как в втором случае в коде выше, то Python все равно будет рассматривать введенное значение как строку, а не как число.